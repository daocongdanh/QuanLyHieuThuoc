/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.manager.stats;

import bus.OrderBUS;
import bus.PurchaseOrderBUS;
import bus.ReturnOrderBUS;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import dto.StatsPriceAndQuantityDTO;
import dto.StatsOrderByDayDTO;
import dto.StatsProductDTO;
import enums.ProductType;
import gui.barchart.ModelChart;
import gui.piechart.ModelPieChart;
import java.awt.Color;
import java.sql.Date;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.temporal.TemporalAdjusters;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import util.FormatDate;
import util.FormatNumber;
import util.MessageDialog;
import util.ResizeImage;
import view.login.LoadApplication;

/**
 *
 * @author Hoang
 */
public class PnProductStats extends javax.swing.JPanel {

    private final OrderBUS orderBUS;
    private final PurchaseOrderBUS purchaseOrderBUS;
    private final ReturnOrderBUS returnOrderBUS;

    public PnProductStats() {
        orderBUS = LoadApplication.orderBUS;
        returnOrderBUS = LoadApplication.returnOrderBUS;
        purchaseOrderBUS = LoadApplication.purchaseOrderBUS;
        initComponents();
        initChart();
        for (ProductType type : ProductType.values()) {
            comboProductType.addItem(type.getDescription());
        }
        jDateFrom.setDate(Date.valueOf(LocalDate.now()));
        jDateTo.setDate(Date.valueOf(LocalDate.now()));
        chart.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblXuHuong = new javax.swing.JLabel();
        pieChart = new gui.piechart.PieChart();
        pnContent = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        lblChartProduct = new javax.swing.JLabel();
        chart = new gui.barchart.Chart();
        jPanel5 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        jDateTo = new com.toedter.calendar.JDateChooser();
        jDateFrom = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboProductType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 6, 0, 6, new java.awt.Color(255, 255, 255)));
        jPanel1.setMinimumSize(new java.awt.Dimension(1130, 800));
        jPanel1.setPreferredSize(new java.awt.Dimension(1130, 800));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 6));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(1118, 400));

        lblXuHuong.setBackground(new java.awt.Color(255, 255, 255));
        lblXuHuong.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        lblXuHuong.setText("XU HƯỚNG MUA HÀNG");
        lblXuHuong.setPreferredSize(new java.awt.Dimension(37, 30));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblXuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, 1118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(413, 413, 413)
                        .addComponent(pieChart, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(313, 313, 313))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(lblXuHuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pieChart, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        pnContent.setBackground(new java.awt.Color(255, 255, 255));
        pnContent.setLayout(new java.awt.BorderLayout(0, 20));

        jPanel14.setLayout(new java.awt.BorderLayout());

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setPreferredSize(new java.awt.Dimension(1188, 40));
        jPanel16.setLayout(new java.awt.BorderLayout());

        lblChartProduct.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY");
        lblChartProduct.setMaximumSize(new java.awt.Dimension(600, 40));
        lblChartProduct.setMinimumSize(new java.awt.Dimension(600, 40));
        lblChartProduct.setPreferredSize(new java.awt.Dimension(600, 40));
        jPanel16.add(lblChartProduct, java.awt.BorderLayout.WEST);

        jPanel14.add(jPanel16, java.awt.BorderLayout.PAGE_START);
        jPanel14.add(chart, java.awt.BorderLayout.CENTER);

        pnContent.add(jPanel14, java.awt.BorderLayout.CENTER);

        jPanel1.add(pnContent, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(232, 232, 232)));
        jPanel5.setPreferredSize(new java.awt.Dimension(590, 100));

        btnSearch.setBackground(new java.awt.Color(115, 165, 71));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Tìm kiếm");
        btnSearch.setMaximumSize(new java.awt.Dimension(150, 40));
        btnSearch.setMinimumSize(new java.awt.Dimension(150, 40));
        btnSearch.setPreferredSize(new java.awt.Dimension(150, 40));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jDateTo.setBackground(new java.awt.Color(255, 255, 255));
        jDateTo.setDateFormatString("dd/MM/yyyy");
        jDateTo.setFocusable(false);
        jDateTo.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jDateTo.setPreferredSize(new java.awt.Dimension(100, 22));

        jDateFrom.setBackground(new java.awt.Color(255, 255, 255));
        jDateFrom.setDateFormatString("dd/MM/yyyy");
        jDateFrom.setFocusable(false);
        jDateFrom.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jDateFrom.setPreferredSize(new java.awt.Dimension(100, 22));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel2.setText("-->");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel5.setText("Ngày bắt đầu");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel6.setText("Ngày kết thúc");

        comboProductType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboProductType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả" }));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel1.setText("Loại sản phẩm");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jDateFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jDateTo, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboProductType, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(42, 42, 42)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(520, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel1))
                .addGap(5, 5, 5)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(comboProductType, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jDateFrom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12))
                        .addComponent(jDateTo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        add(jPanel5, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        java.util.Date date1 = jDateFrom.getDate();
        java.util.Date date2 = jDateTo.getDate();

        LocalDate localDateStart = date1.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        LocalDate localDateEnd = date2.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        LocalDateTime start = localDateStart.atStartOfDay(); // 00:00:00
        LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999); // 23:59:59.999999999

        if (start.isAfter(end)) {
            MessageDialog.warning(null, "Ngày bắt đầu phải trước ngày kết thúc");
            return;
        }
        List<StatsProductDTO> listStats = orderBUS.getStatisticProductByDateAndType(start, end, (String) comboProductType.getSelectedItem());
        List<StatsProductDTO> listPie = orderBUS.getStatisticProductByDate(start, end);
        lblXuHuong.setText("XU HƯỚNG MUA HÀNG TỪ NGÀY " + FormatDate.formatDateNoHour(start) + " ĐẾN NGÀY " + FormatDate.formatDateNoHour(end));
        lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY TỪ NGÀY " + FormatDate.formatDateNoHour(start) + " ĐẾN NGÀY " + FormatDate.formatDateNoHour(end));
        loadDataChartProduct(listStats);
        loadChartPieProduct(listPie);
    }//GEN-LAST:event_btnSearchActionPerformed

//    private void overallProduct(){
//        LocalDateTime now = LocalDateTime.now();
//        List<StatsProductDTO> listStats = new ArrayList<>();
//        switch (comboDateProduct.getSelectedIndex()) {
//            case 0 -> {
//                lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY 7 NGÀY GẦN NHẤT");
//                listStats = orderBUS.getStatisticProductByDate(now.minusDays(7).toLocalDate().atStartOfDay(), now);
//                loadDataChartProduct(listStats);
//                break;
//            }
//            case 1 -> {
//                lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY HÔM NAY");
//                LocalDateTime start = now.toLocalDate().atStartOfDay();
//                LocalDateTime end = now.toLocalDate().atTime(23, 59, 59, 999999999);
//
//                listStats = orderBUS.getStatisticProductByDate(start, end);
//                loadDataChartProduct(listStats);
//                break;
//            }
//            case 2 -> {
//                lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY HÔM QUA");
//                LocalDateTime start = now.minusDays(1).toLocalDate().atStartOfDay();
//                LocalDateTime end = now.minusDays(1).toLocalDate().atTime(23, 59, 59, 999999999);
//
//                listStats = orderBUS.getStatisticProductByDate(start, end);
//                loadDataChartProduct(listStats);
//                break;
//            }
//            case 3 -> {
//                lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY TRONG THÁNG " + now.getMonthValue());
//                LocalDateTime start = now.withDayOfMonth(1).toLocalDate().atStartOfDay();
//                LocalDateTime end = now.toLocalDate().withDayOfMonth(now.toLocalDate().lengthOfMonth()).atTime(23, 59, 59, 999999999);
//
//                listStats = orderBUS.getStatisticProductByDate(start, end);
//                loadDataChartProduct(listStats);
//                break;
//            }
//            case 4 -> {
//                lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY TRONG THÁNG " + now.minusMonths(1).getMonthValue());
//                LocalDateTime start = now.minusMonths(1).withDayOfMonth(1).toLocalDate().atStartOfDay();
//                LocalDateTime end = now.minusMonths(1)
//                .with(TemporalAdjusters.lastDayOfMonth()).withHour(23).withMinute(59).withSecond(59).withNano(999999999);
//                listStats = orderBUS.getStatisticProductByDate(start, end);
//                loadDataChartProduct(listStats);
//                break;
//            }
//            default -> {
//                lblChartProduct.setText("TOP 5 SẢN PHẨM BÁN CHẠY 7 NGÀY GẦN NHẤT");
//                listStats = orderBUS.getStatisticProductByDate(now.minusDays(7).toLocalDate().atStartOfDay(), now);
//                loadDataChartProduct(listStats);
//                break;
//            }
//        }
//    }
    private void initChart() {
        lblChartProduct.setText("thống kê doanh thu 7 ngày gần nhất ( THEO NGÀY )".toUpperCase());
        chart.addLegend("Doanh thu", new Color(135, 189, 245));
//        chart1.addLegend("Số lượng", new Color(135, 189, 245));
    }

    private Color getColor(int index) {
        Color[] color = new Color[]{
            new Color(255, 99, 132), // Đỏ hồng
            new Color(54, 162, 235), // Xanh da trời
            new Color(255, 206, 86), // Vàng
            new Color(75, 192, 192), // Xanh ngọc
            new Color(153, 102, 255), // Tím
            new Color(255, 159, 64), // Cam
            new Color(201, 203, 207), // Xám nhạt
            new Color(220, 20, 60), // Đỏ tươi
            new Color(0, 128, 128), // Xanh teal
            new Color(240, 230, 140) // Khaki
        };
        return color[index % color.length]; // Đảm bảo chỉ số không vượt quá kích thước mảng
    }

    private void loadDataChartProduct(List<StatsProductDTO> listStats) {
        chart.clear();
        int i = 0;
        for (StatsProductDTO e : listStats) {
            chart.addData(new ModelChart(e.getProductName(),
                    new double[]{e.getQuantity()}));

        }
        chart.start();
    }

    private void loadChartPieProduct(List<StatsProductDTO> listStats) {
       if ( listStats == null){
           pieChart.removeAll();
       }
        
        pieChart.clearData();
        int i = 0;
        Map<String, Double> productTypeMap = new HashMap<>();
        for (StatsProductDTO e : listStats) {

            String productTypeDescription = e.getProductType().getDescription();
            if (productTypeMap.containsKey(productTypeDescription)) {
                productTypeMap.put(productTypeDescription, productTypeMap.get(productTypeDescription) + e.getSumPrice());
            } else {
                productTypeMap.put(productTypeDescription, e.getSumPrice());
            }
        }
        for (Map.Entry<String, Double> entry : productTypeMap.entrySet()) {
            String productType = entry.getKey();
            Double sumPrice = entry.getValue();
            pieChart.addData(new ModelPieChart(productType, sumPrice, getColor(i)));
            i++;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private gui.barchart.Chart chart;
    private javax.swing.JComboBox<String> comboProductType;
    private com.toedter.calendar.JDateChooser jDateFrom;
    private com.toedter.calendar.JDateChooser jDateTo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblChartProduct;
    private javax.swing.JLabel lblXuHuong;
    private gui.piechart.PieChart pieChart;
    private javax.swing.JPanel pnContent;
    // End of variables declaration//GEN-END:variables
}
