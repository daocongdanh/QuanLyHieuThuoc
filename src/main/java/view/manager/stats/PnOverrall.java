/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.manager.stats;

import bus.OrderBUS;
import bus.PurchaseOrderBUS;
import bus.ReturnOrderBUS;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import dto.StatsPriceAndQuantityDTO;
import dto.StatsOrderByDayDTO;
import dto.StatsProductDTO;
import gui.barchart.ModelChart;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.temporal.TemporalAdjusters;
import java.util.ArrayList;
import java.util.List;

import util.FormatDate;
import util.FormatNumber;
import util.ResizeImage;
import view.login.LoadApplication;

/**
 *
 * @author Hoang
 */
public class PnOverrall extends javax.swing.JPanel {

    private final OrderBUS orderBUS;
    private final PurchaseOrderBUS purchaseOrderBUS;
    private final ReturnOrderBUS returnOrderBUS;

    public PnOverrall() {
        orderBUS = LoadApplication.orderBUS;
        returnOrderBUS = LoadApplication.returnOrderBUS;
        purchaseOrderBUS = LoadApplication.purchaseOrderBUS;
        initComponents();
        initChart();
        initHeader();
        chart.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnContent = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lblIconOrder = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtSumPriceOrder = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtQuantityOrder = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        lblIconReturn = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtSumPriceReturn = new javax.swing.JLabel();
        txtQuantityReturn = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        lblIconCompare = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        txtQuantityPurchase = new javax.swing.JLabel();
        txtSumPricePurchase = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblChart1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        lblChart = new javax.swing.JLabel();
        comboDate = new javax.swing.JComboBox<>();
        chart = new gui.barchart.Chart();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 6, 0, 6, new java.awt.Color(255, 255, 255)));
        jPanel1.setMinimumSize(new java.awt.Dimension(1130, 800));
        jPanel1.setPreferredSize(new java.awt.Dimension(1130, 800));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 6));

        pnContent.setBackground(new java.awt.Color(255, 255, 255));
        pnContent.setLayout(new java.awt.BorderLayout(0, 20));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(100, 150));
        jPanel2.setPreferredSize(new java.awt.Dimension(100, 130));
        jPanel2.setLayout(new java.awt.GridLayout(1, 3, 16, 8));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(232, 232, 232)));
        jPanel3.setPreferredSize(new java.awt.Dimension(370, 110));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(120, 110));
        jPanel7.setLayout(new java.awt.BorderLayout());

        lblIconOrder.setBackground(new java.awt.Color(255, 255, 255));
        lblIconOrder.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconOrder.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        lblIconOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel7.add(lblIconOrder, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel7, java.awt.BorderLayout.WEST);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMinimumSize(new java.awt.Dimension(120, 110));

        txtSumPriceOrder.setFont(new java.awt.Font("Roboto Mono", 1, 36)); // NOI18N
        txtSumPriceOrder.setForeground(new java.awt.Color(51, 51, 51));
        txtSumPriceOrder.setText("50");
        txtSumPriceOrder.setPreferredSize(new java.awt.Dimension(100, 16));

        jLabel3.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Doanh thu");

        txtQuantityOrder.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtQuantityOrder.setForeground(new java.awt.Color(51, 51, 51));
        txtQuantityOrder.setText("50 phiếu hóa đơn");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSumPriceOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantityOrder, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtQuantityOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSumPriceOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel3.add(jPanel6, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(232, 232, 232)));
        jPanel8.setPreferredSize(new java.awt.Dimension(370, 100));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setMinimumSize(new java.awt.Dimension(120, 110));
        jPanel9.setPreferredSize(new java.awt.Dimension(120, 110));
        jPanel9.setLayout(new java.awt.BorderLayout());

        lblIconReturn.setBackground(new java.awt.Color(255, 255, 255));
        lblIconReturn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconReturn.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        lblIconReturn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel9.add(lblIconReturn, java.awt.BorderLayout.CENTER);

        jPanel8.add(jPanel9, java.awt.BorderLayout.WEST);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(120, 110));

        jLabel9.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Trả hàng");

        txtSumPriceReturn.setFont(new java.awt.Font("Roboto Mono", 1, 36)); // NOI18N
        txtSumPriceReturn.setForeground(new java.awt.Color(51, 51, 51));
        txtSumPriceReturn.setText("50");
        txtSumPriceReturn.setPreferredSize(new java.awt.Dimension(100, 16));

        txtQuantityReturn.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtQuantityReturn.setForeground(new java.awt.Color(51, 51, 51));
        txtQuantityReturn.setText("30 đơn trả hàng");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSumPriceReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantityReturn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(txtQuantityReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSumPriceReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel8.add(jPanel10, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel8);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(232, 232, 232)));
        jPanel11.setPreferredSize(new java.awt.Dimension(370, 100));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setMinimumSize(new java.awt.Dimension(120, 110));
        jPanel12.setPreferredSize(new java.awt.Dimension(120, 110));
        jPanel12.setLayout(new java.awt.BorderLayout());

        lblIconCompare.setBackground(new java.awt.Color(255, 255, 255));
        lblIconCompare.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconCompare.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        lblIconCompare.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel12.add(lblIconCompare, java.awt.BorderLayout.CENTER);

        jPanel11.add(jPanel12, java.awt.BorderLayout.WEST);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setMinimumSize(new java.awt.Dimension(120, 110));

        txtQuantityPurchase.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        txtQuantityPurchase.setForeground(new java.awt.Color(51, 51, 51));
        txtQuantityPurchase.setText("30 đơn nhập hàng");

        txtSumPricePurchase.setFont(new java.awt.Font("Roboto Mono", 1, 36)); // NOI18N
        txtSumPricePurchase.setForeground(new java.awt.Color(51, 51, 51));
        txtSumPricePurchase.setText("50");
        txtSumPricePurchase.setPreferredSize(new java.awt.Dimension(100, 16));

        jLabel10.setFont(new java.awt.Font("Roboto", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Nhập hàng");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSumPricePurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtQuantityPurchase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(txtQuantityPurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSumPricePurchase, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel11.add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel11);

        jPanel4.add(jPanel2, java.awt.BorderLayout.CENTER);

        lblChart1.setBackground(new java.awt.Color(255, 255, 255));
        lblChart1.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        lblChart1.setText("KẾT QUẢ BÁN HÀNG HÔM NAY");
        lblChart1.setPreferredSize(new java.awt.Dimension(37, 30));
        jPanel4.add(lblChart1, java.awt.BorderLayout.PAGE_START);

        pnContent.add(jPanel4, java.awt.BorderLayout.PAGE_START);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 2, 0, new java.awt.Color(232, 232, 232)));
        jPanel5.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setPreferredSize(new java.awt.Dimension(1188, 40));
        jPanel15.setLayout(new java.awt.BorderLayout());

        lblChart.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
        lblChart.setText("Thống kê");
        lblChart.setMaximumSize(new java.awt.Dimension(600, 40));
        lblChart.setMinimumSize(new java.awt.Dimension(600, 40));
        lblChart.setPreferredSize(new java.awt.Dimension(600, 40));
        jPanel15.add(lblChart, java.awt.BorderLayout.WEST);

        comboDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "7 ngày qua", "Hôm nay", "Hôm qua", "Tháng này", "Tháng trước" }));
        comboDate.setMinimumSize(new java.awt.Dimension(140, 26));
        comboDate.setPreferredSize(new java.awt.Dimension(140, 22));
        comboDate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboDateItemStateChanged(evt);
            }
        });
        jPanel15.add(comboDate, java.awt.BorderLayout.EAST);

        jPanel5.add(jPanel15, java.awt.BorderLayout.PAGE_START);
        jPanel5.add(chart, java.awt.BorderLayout.CENTER);

        pnContent.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel1.add(pnContent, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void comboDateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboDateItemStateChanged
        // TODO add your handling code here:
        changeDateSelect();
    }//GEN-LAST:event_comboDateItemStateChanged
    private void initHeader() {
        lblIconReturn.setIcon(ResizeImage.resizeImage(new FlatSVGIcon(getClass().getResource("/img/8.svg")), 55, 55));
        lblIconOrder.setIcon(ResizeImage.resizeImage(new FlatSVGIcon(getClass().getResource("/img/10.svg")), 55, 55));
        lblIconCompare.setIcon(ResizeImage.resizeImage(new FlatSVGIcon(getClass().getResource("/img/7.svg")), 55, 55));
        LocalDate localDateStart = LocalDate.now();
        LocalDate localDateEnd = LocalDate.now();

        LocalDateTime start = localDateStart.atStartOfDay(); // 00:00:00
        LocalDateTime end = localDateEnd.atTime(23, 59, 59, 999999999); // 23:59:59.999999999
        StatsPriceAndQuantityDTO quantityAndSumPriceOrder
                = orderBUS.getQuantityAndSumPriceByDate(start, end);

        StatsPriceAndQuantityDTO quantityAndSumPriceReturnOrder
                = returnOrderBUS.getQuantityAndSumPriceByDate(start, end);

        StatsPriceAndQuantityDTO quantityAndSumPricePurchase
                = purchaseOrderBUS.getQuantityAndSumPriceByDate(start, end);

        txtQuantityOrder.setText(quantityAndSumPriceOrder.getQuantity() + " đơn hàng");
        txtSumPriceOrder.setText(FormatNumber.formatToVND(quantityAndSumPriceOrder.getSumPrice()));

        txtQuantityReturn.setText(quantityAndSumPriceReturnOrder.getQuantity() + " đơn trả hàng");
        txtSumPriceReturn.setText(FormatNumber.formatToVND(quantityAndSumPriceReturnOrder.getSumPrice()));

        txtQuantityPurchase.setText(quantityAndSumPricePurchase.getQuantity() + " đơn nhập hàng");
        txtSumPricePurchase.setText(FormatNumber.formatToVND(quantityAndSumPricePurchase.getSumPrice()));
    }

    private void initChart() {
        lblChart.setText("thống kê doanh thu 7 ngày gần nhất ( THEO NGÀY )".toUpperCase());
        chart.addLegend("Doanh thu", new Color(135, 189, 245));
//        chart1.addLegend("Số lượng", new Color(135, 189, 245));
        LocalDateTime start = LocalDateTime.now();
        List<StatsOrderByDayDTO> listStats = orderBUS.getStatisticByDate(start.minusDays(7).toLocalDate().atStartOfDay(), start);
        loadDataChartDayRevenue(listStats);

    }

    private void loadDataChartDayRevenue(List<StatsOrderByDayDTO> listStats) {
        chart.clear();
        for (StatsOrderByDayDTO e : listStats) {
            chart.addData(new ModelChart(FormatDate.formatDateToDayAndMonth(e.getTime()),
                    new double[]{e.getSumPrice()}));
        }
        chart.start();
    }

    private void loadDataChartOnlyDayRevenue(List<StatsOrderByDayDTO> listStats) {
        chart.clear();
        for (StatsOrderByDayDTO e : listStats) {
            chart.addData(new ModelChart(e.getTime().getDayOfMonth() + "",
                    new double[]{e.getSumPrice()}));
        }
        chart.start();
    }

    private void loadDataChartHourRevenue(List<StatsOrderByDayDTO> listStats) {
        chart.clear();
        for (StatsOrderByDayDTO e : listStats) {
            chart.addData(new ModelChart(e.getTime().getHour() + "",
                    new double[]{e.getSumPrice()}));
        }
        chart.start();
    }
    
    private void changeDateSelect() {
//        7 ngày qua, Hôm nay, Hôm qua, Tháng này, Tháng trước
        LocalDateTime now = LocalDateTime.now();
        List<StatsOrderByDayDTO> listStats = new ArrayList<>();
        switch (comboDate.getSelectedIndex()) {
            case 0 -> {
                lblChart.setText("THỐNG KÊ DOANH THU 7 NGÀY GẦN NHẤT ( THEO NGÀY )");
                listStats = orderBUS.getStatisticByDate(now.minusDays(7).toLocalDate().atStartOfDay(), now);
                loadDataChartDayRevenue(listStats);
                break;
            }
            case 1 -> {
                lblChart.setText("THỐNG KÊ DOANH THU HÔM NAY ( THEO GIỜ )");
                listStats = orderBUS.getStatisticInDay(now);
                loadDataChartHourRevenue(listStats);
                break;
            }
            case 2 -> {
                lblChart.setText("THỐNG KÊ DOANH THU HÔM QUA ( THEO GIỜ )");
                listStats = orderBUS.getStatisticInDay(now.minusDays(1));
                loadDataChartHourRevenue(listStats);
                break;
            }
            case 3 -> {
                lblChart.setText("THỐNG KÊ DOANH THU THÁNG " + now.getMonthValue() + " ( THEO NGÀY )");
                LocalDateTime start = now.with(TemporalAdjusters.firstDayOfMonth()).withHour(0).withMinute(0).withSecond(0).withNano(0);
                LocalDateTime end = now.with(TemporalAdjusters.lastDayOfMonth()).withHour(23).withMinute(59).withSecond(59).withNano(999999999);
                listStats = orderBUS.getStatisticByDate(start, end);
                loadDataChartOnlyDayRevenue(listStats);
                break;
            }
            case 4 -> {
                lblChart.setText("THỐNG KÊ DOANH THU THÁNG " + now.minusMonths(1).getMonthValue() + " ( THEO NGÀY )");

                LocalDateTime start = now.minusMonths(1)
                        .with(TemporalAdjusters.firstDayOfMonth()).withHour(0).withMinute(0).withSecond(0).withNano(0);
                LocalDateTime end = now.minusMonths(1)
                        .with(TemporalAdjusters.lastDayOfMonth()).withHour(23).withMinute(59).withSecond(59).withNano(999999999);
                listStats = orderBUS.getStatisticByDate(start, end);
                loadDataChartOnlyDayRevenue(listStats);
                break;
            }
            default -> {
                lblChart.setText("THỐNG KÊ DOANH THU 7 NGÀY GẦN NHẤT ( THEO NGÀY )");
                listStats = orderBUS.getStatisticByDate(now.minusDays(7).toLocalDate().atStartOfDay(), now);
                loadDataChartDayRevenue(listStats);
                break;
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.barchart.Chart chart;
    private javax.swing.JComboBox<String> comboDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JLabel lblChart;
    private javax.swing.JLabel lblChart1;
    private javax.swing.JLabel lblIconCompare;
    private javax.swing.JLabel lblIconOrder;
    private javax.swing.JLabel lblIconReturn;
    private javax.swing.JPanel pnContent;
    private javax.swing.JLabel txtQuantityOrder;
    private javax.swing.JLabel txtQuantityPurchase;
    private javax.swing.JLabel txtQuantityReturn;
    private javax.swing.JLabel txtSumPriceOrder;
    private javax.swing.JLabel txtSumPricePurchase;
    private javax.swing.JLabel txtSumPriceReturn;
    // End of variables declaration//GEN-END:variables
}
